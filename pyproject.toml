[tool.poetry]
name = "mlcoellm-dataqa"
version = "0.0.24"
description = "Data Q&A Library"
readme = "README.md"
packages = [
    { include = "dataqa" },
]
include = [
    "dataqa/examples/**/*",
    "dataqa/benchmark/**/*",
]

[tool.poetry.dependencies]
python = ">=3.11, <4.0"
pydantic = "^2.6.2"
pydantic-core = "2.7.2"
annotated-types = "^0.27.2"
https = "^0.27.2"
boto3 = "^1.35.51"
cachetools = "^5.3.1"
pandas = "^2.2.0"
openpyxl = "^3.0.1"
sqlalchemy = "^2.0.32"
matplotlib = "^3.7"
duckdb = "^1.0.0"
ruamel-yaml = "^1.0.0"
azure-identity = "^1.17.1"
langchain-openai = "^0.3.17"
langchain = "^0.3.25"
langgraph = "^0.3.16"
seaborn = "^0.13.2"
tabulate = "^0.9.0"
pyspark = "^4.0.0"
jinja2 = "^3.1.6"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.2"
pre-commit = "^3.6.2"
pre-commit-hooks = "^4.5.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.25.3"
pytest-cov = "^5.2"
coverage = "^7.2.7"
jupyter = "^1.0.0"
sphinx = "^6.2.1"
sphinx-rtd-theme = "^0.25.2"
responses = "^0.25.2"
mkdocs = "^1.6.1"
mkdocstrings = "^0.20.1"
mkdocstrings-python = "^1.10.10"
mkdocs-material = "^9.6.15"

[tool.ruff]
line-length = 88
exclude = ["**/e.ipynb"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"